apply plugin: 'android-library'


dependencies {
    compile 'com.nineoldandroids:library:2.4.0'

    /* Test libraries */
    androidTestCompile ('org.mockito:mockito-core:1.9.5')  { exclude group: 'org.hamcrest' }
//    androidTestCompile ('com.google.dexmaker:dexmaker-mockito:1.0')  { exclude group: 'org.hamcrest' }
    androidTestCompile ('junit:junit:4.11')  { exclude group: 'org.hamcrest' }
    androidTestCompile 'org.hamcrest:hamcrest-all:1.3'

    /* Custom compiled dexmaker. Switch back to the original one once fix https://code.google.com/p/dexmaker/issues/detail?id=28 has been applied */
    androidTestCompile files('libs/dexmaker-1.1.jar')
    androidTestCompile files('libs/dexmaker-mockito-1.1-custom.jar')
}

android {
    compileSdkVersion 19
    buildToolsVersion '19.1.0'

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 19
        versionName project.VERSION_NAME
        versionCode Integer.parseInt(new Date().format('yyyyMMddHH'))
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }

    lintOptions {
        textReport true
        textOutput 'stdout'
        warningsAsErrors true
    }
}

apply from: '../maven_push.gradle'


android.libraryVariants.all { variant ->
    task("generate${variant.name}Javadoc", type: Javadoc) {
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
        options.links("http://docs.oracle.com/javase/7/docs/api/");
        options.links("http://d.android.com/reference/");
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
    }
}